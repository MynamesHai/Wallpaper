apply plugin: 'com.android.application'

android {
    compileSdkVersion cfgs.compileSdkVersion
    defaultConfig {
        applicationId "com.androidvn.wallpaper"
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion
        versionCode cfgs.versionCode
        versionName cfgs.versionName
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    dexOptions {
        javaMaxHeapSize "8g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}


configurations.all() {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion cfgs.androidSupportVersion
            }
        }
        if (requested.group == 'com.google.android') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion cfgs.googlePlayServiceVersion
            }
        }
        if (requested.group == 'com.google.dagger') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion cfgs.dagger2Version
            }
        }
    }
}

apply plugin: 'org.greenrobot.greendao'

greendao {
    schemaVersion 1
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/UtilityLibrary')

    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:${cfgs.androidSupportVersion}"
    implementation "com.android.support:design:${cfgs.androidSupportVersion}"
    implementation 'eu.the4thfloor.volley:com.android.volley:2015.05.28'
    implementation 'com.android.support:multidex:1.0.3'

    //Gooogle play service
    implementation "com.google.android.gms:play-services-gcm:${cfgs.googlePlayServiceVersion}"
    implementation "com.google.android.gms:play-services-ads:${cfgs.googlePlayServiceVersion}"
    implementation "com.google.android.gms:play-services-location:${cfgs.googlePlayServiceVersion}"

    // dependency injection
    implementation "com.google.dagger:dagger:$cfgs.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$cfgs.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$cfgs.dagger2Version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    //Butter Knife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Easy Permissions
    implementation 'com.karumi:dexter:4.2.0'
    // Event Bus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //Green DAO
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.google.code.gson:gson:2.2.4'
    //Glide Module
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.bumptech.glide:annotations:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    //facebook SDK
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile('com.crashlytics.sdk.android:answers:1.4.2@aar') {
        transitive = true;
    }
    //Bottom Navigation Menu
    implementation 'com.github.ittianyu:BottomNavigationViewEx:1.2.4'
}
